// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `TradeSession.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var CM = require("./Common").CM;
    var Slice = Ice.Slice;

    var Trade = __M.module("Trade");

    Trade.TdSessionCallBack = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::Trade::TdSessionCallBack"
        ],
        -1, undefined, undefined, false);

    Trade.TdSessionCallBackPrx = Slice.defineProxy(Ice.ObjectPrx, Trade.TdSessionCallBack.ice_staticId, undefined);

    Slice.defineOperations(Trade.TdSessionCallBack, Trade.TdSessionCallBackPrx,
    {
        "onDone": [, , , , , [3], [[7], [CM.Done], [CM.Account], ["CM.PositionListHelper"]], , , , ],
        "onOrder": [, , , , , [3], [[7], [CM.Order]], , , , ]
    });

    Trade.TdSession = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::Trade::TdSession"
        ],
        -1, undefined, undefined, false);

    Trade.TdSessionPrx = Slice.defineProxy(Ice.ObjectPrx, Trade.TdSession.ice_staticId, undefined);

    Slice.defineOperations(Trade.TdSession, Trade.TdSessionPrx,
    {
        "setCallBack": [, , , , , [3], [[Ice.Identity]], , , , ],
        "heartBeat": [, , , , , [3], , , , , ],
        "queryAccount": [, , , , , ["CM.AccountListHelper"], , , , , ],
        "queryPosition": [, , , , , ["CM.PositionListHelper"], [[7]], , , , ],
        "queryOrder": [, , , , , ["CM.OrderListHelper"], [[7]], , , , ],
        "queryDone": [, , , , , ["CM.DoneListHelper"], [[7]], , , , ],
        "jsonQueryAccount": [, , , , , [7], [[3]], , , , ],
        "jsonQueryPosition": [, , , , , [7], [[7], [3]], , , , ],
        "jsonQueryOrder": [, , , , , [7], [[7], [3]], , , , ],
        "jsonQueryDone": [, , , , , [7], [[7], [3]], , , , ],
        "doOrder": [, , , , , [3], [[CM.DoOrder]], , , , ],
        "cancleOrder": [, , , , , [3], [[7], [7], [7], [7]], , , , ],
        "subscribe": [, , , , , [3], [[7], [7]], , , , ],
        "unSubscribe": [, , , , , [3], [[7]], , , , ],
        "QuerySession": [, , , , , [7], , , , , ],
        "QuerySubCurrent": [, , , , , [7], , , , , ]
    });
    exports.Trade = Trade;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
