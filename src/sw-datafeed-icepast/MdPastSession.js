// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `MdPastSession.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var CM = require("./Common").CM;
    var Slice = Ice.Slice;

    var MdPast = __M.module("MdPast");

    MdPast.MdSessionCallBack = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::MdPast::MdSessionCallBack"
        ],
        -1, undefined, undefined, false);

    MdPast.MdSessionCallBackPrx = Slice.defineProxy(Ice.ObjectPrx, MdPast.MdSessionCallBack.ice_staticId, undefined);

    Slice.defineOperations(MdPast.MdSessionCallBack, MdPast.MdSessionCallBackPrx,
    {
        "onTick": [, , , , , [3], [[7], [7], [CM.Ticker]], , , , ],
        "onBar": [, , , , , [3], [[7], [7], [CM.Bar]], , , , ],
        "onDay": [, , , , , [3], [[7], [7], [CM.DayBar]], , , , ]
    });

    MdPast.MdSession = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::MdPast::MdSession"
        ],
        -1, undefined, undefined, false);

    MdPast.MdSessionPrx = Slice.defineProxy(Ice.ObjectPrx, MdPast.MdSession.ice_staticId, undefined);

    Slice.defineOperations(MdPast.MdSession, MdPast.MdSessionPrx,
    {
        "queryData": [, , , , , [7], [[Ice.Identity], [7], [7], [7], [7]], , , , ]
    });
    exports.MdPast = MdPast;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
