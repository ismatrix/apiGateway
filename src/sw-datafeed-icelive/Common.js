// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `Common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var Slice = Ice.Slice;

    var CM = __M.module("CM");

    CM.Ticker = Slice.defineStruct(
        function(Timestamp, Price, Volume, Turnover, OpenInterest, TotalVolume, TotalTurnover, BidPrice1, AskPrice1, BidVolume1, AskVolume1)
        {
            this.Timestamp = Timestamp !== undefined ? Timestamp : 0;
            this.Price = Price !== undefined ? Price : 0.0;
            this.Volume = Volume !== undefined ? Volume : 0;
            this.Turnover = Turnover !== undefined ? Turnover : 0.0;
            this.OpenInterest = OpenInterest !== undefined ? OpenInterest : 0.0;
            this.TotalVolume = TotalVolume !== undefined ? TotalVolume : 0.0;
            this.TotalTurnover = TotalTurnover !== undefined ? TotalTurnover : 0.0;
            this.BidPrice1 = BidPrice1 !== undefined ? BidPrice1 : 0.0;
            this.AskPrice1 = AskPrice1 !== undefined ? AskPrice1 : 0.0;
            this.BidVolume1 = BidVolume1 !== undefined ? BidVolume1 : 0;
            this.AskVolume1 = AskVolume1 !== undefined ? AskVolume1 : 0;
        },
        false,
        function(__os)
        {
            __os.writeLong(this.Timestamp);
            __os.writeDouble(this.Price);
            __os.writeInt(this.Volume);
            __os.writeDouble(this.Turnover);
            __os.writeDouble(this.OpenInterest);
            __os.writeDouble(this.TotalVolume);
            __os.writeDouble(this.TotalTurnover);
            __os.writeDouble(this.BidPrice1);
            __os.writeDouble(this.AskPrice1);
            __os.writeInt(this.BidVolume1);
            __os.writeInt(this.AskVolume1);
        },
        function(__is)
        {
            this.Timestamp = __is.readLong();
            this.Price = __is.readDouble();
            this.Volume = __is.readInt();
            this.Turnover = __is.readDouble();
            this.OpenInterest = __is.readDouble();
            this.TotalVolume = __is.readDouble();
            this.TotalTurnover = __is.readDouble();
            this.BidPrice1 = __is.readDouble();
            this.AskPrice1 = __is.readDouble();
            this.BidVolume1 = __is.readInt();
            this.AskVolume1 = __is.readInt();
        },
        76, 
        true);

    CM.Bar = Slice.defineStruct(
        function(Timestamp, High, Low, Open, Close, Volume, Turnover, OpenInterest)
        {
            this.Timestamp = Timestamp !== undefined ? Timestamp : 0;
            this.High = High !== undefined ? High : 0.0;
            this.Low = Low !== undefined ? Low : 0.0;
            this.Open = Open !== undefined ? Open : 0.0;
            this.Close = Close !== undefined ? Close : 0.0;
            this.Volume = Volume !== undefined ? Volume : 0;
            this.Turnover = Turnover !== undefined ? Turnover : 0.0;
            this.OpenInterest = OpenInterest !== undefined ? OpenInterest : 0.0;
        },
        false,
        function(__os)
        {
            __os.writeLong(this.Timestamp);
            __os.writeDouble(this.High);
            __os.writeDouble(this.Low);
            __os.writeDouble(this.Open);
            __os.writeDouble(this.Close);
            __os.writeInt(this.Volume);
            __os.writeDouble(this.Turnover);
            __os.writeDouble(this.OpenInterest);
        },
        function(__is)
        {
            this.Timestamp = __is.readLong();
            this.High = __is.readDouble();
            this.Low = __is.readDouble();
            this.Open = __is.readDouble();
            this.Close = __is.readDouble();
            this.Volume = __is.readInt();
            this.Turnover = __is.readDouble();
            this.OpenInterest = __is.readDouble();
        },
        60, 
        true);

    CM.DayBar = Slice.defineStruct(
        function(Timestamp, High, Low, Open, Close, Average, Volume, Turnover, Settlement, OpenInterest, PreSettlement, PreClose, PreoOpenInterest)
        {
            this.Timestamp = Timestamp !== undefined ? Timestamp : 0;
            this.High = High !== undefined ? High : 0.0;
            this.Low = Low !== undefined ? Low : 0.0;
            this.Open = Open !== undefined ? Open : 0.0;
            this.Close = Close !== undefined ? Close : 0.0;
            this.Average = Average !== undefined ? Average : 0.0;
            this.Volume = Volume !== undefined ? Volume : 0;
            this.Turnover = Turnover !== undefined ? Turnover : 0.0;
            this.Settlement = Settlement !== undefined ? Settlement : 0.0;
            this.OpenInterest = OpenInterest !== undefined ? OpenInterest : 0.0;
            this.PreSettlement = PreSettlement !== undefined ? PreSettlement : 0.0;
            this.PreClose = PreClose !== undefined ? PreClose : 0.0;
            this.PreoOpenInterest = PreoOpenInterest !== undefined ? PreoOpenInterest : 0.0;
        },
        false,
        function(__os)
        {
            __os.writeLong(this.Timestamp);
            __os.writeDouble(this.High);
            __os.writeDouble(this.Low);
            __os.writeDouble(this.Open);
            __os.writeDouble(this.Close);
            __os.writeDouble(this.Average);
            __os.writeInt(this.Volume);
            __os.writeDouble(this.Turnover);
            __os.writeDouble(this.Settlement);
            __os.writeDouble(this.OpenInterest);
            __os.writeDouble(this.PreSettlement);
            __os.writeDouble(this.PreClose);
            __os.writeDouble(this.PreoOpenInterest);
        },
        function(__is)
        {
            this.Timestamp = __is.readLong();
            this.High = __is.readDouble();
            this.Low = __is.readDouble();
            this.Open = __is.readDouble();
            this.Close = __is.readDouble();
            this.Average = __is.readDouble();
            this.Volume = __is.readInt();
            this.Turnover = __is.readDouble();
            this.Settlement = __is.readDouble();
            this.OpenInterest = __is.readDouble();
            this.PreSettlement = __is.readDouble();
            this.PreClose = __is.readDouble();
            this.PreoOpenInterest = __is.readDouble();
        },
        100, 
        true);
    exports.CM = CM;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
